# Generated by Django 3.2.6 on 2021-10-16 06:47

from django.db import migrations, models
import django.utils.timezone
import staffs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('last_name', models.CharField(max_length=30, verbose_name='姓')),
                ('first_name', models.CharField(max_length=30, verbose_name='名')),
                ('password', models.CharField(max_length=128)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_kana', models.CharField(max_length=30, verbose_name='せい')),
                ('first_kana', models.CharField(max_length=30, verbose_name='めい')),
                ('short_name', models.CharField(blank=True, default='', max_length=30, verbose_name='短縮名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生年月日')),
                ('staff_no', models.PositiveSmallIntegerField(blank=True, null=True, unique=True, verbose_name='社員番号')),
                ('postcode', models.CharField(max_length=7, verbose_name='郵便番号')),
                ('adr_ken', models.CharField(max_length=4, verbose_name='都道府県')),
                ('adr_siku', models.CharField(max_length=30, verbose_name='市区町村')),
                ('adr_tyou', models.CharField(max_length=30, verbose_name='町名・番地')),
                ('adr_bld', models.CharField(blank=True, default='', max_length=40, verbose_name='ビル・マンション名')),
                ('tel', models.CharField(blank=True, default='', max_length=15, verbose_name='電話番号')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='携帯')),
                ('shaho', models.BooleanField(default=False, verbose_name='社会保険加入')),
                ('join', models.DateField(blank=True, null=True, verbose_name='入社日')),
                ('biko', models.TextField(blank=True, default='', verbose_name='備考')),
                ('jimu', models.BooleanField(default=False, verbose_name='事務員')),
                ('servkan', models.BooleanField(default=False, verbose_name='サービス提供責任者')),
                ('kaigo', models.BooleanField(default=False, verbose_name='介護職員(一覧表示に必須)')),
                ('caremane', models.BooleanField(default=False, verbose_name='ケアマネージャー')),
                ('sousien', models.BooleanField(default=False, verbose_name='相談支援専門員')),
                ('servsou', models.BooleanField(default=False, verbose_name='サービス相談員')),
                ('kaifuku', models.BooleanField(default=False, verbose_name='介護福祉士')),
                ('jitumu', models.BooleanField(default=False, verbose_name='実務者研修')),
                ('shonin', models.BooleanField(default=False, verbose_name='初任者研修')),
                ('kisoken', models.BooleanField(default=False, verbose_name='基礎研修(旧)')),
                ('helper2', models.BooleanField(default=False, verbose_name='ホームヘルパー2級(旧)')),
                ('reader', models.BooleanField(default=False, verbose_name='グループリーダー')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', staffs.models.CustomUserManager()),
            ],
        ),
    ]
